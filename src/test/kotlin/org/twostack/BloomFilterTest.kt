package org.twostack

import org.junit.Assert
import org.junit.Test
import org.twostack.bitcoin4j.Utils
import org.twostack.bitcoin4j.crypto.DumpedPrivateKey
import org.twostack.bitcoin4j.params.NetworkType
import org.twostack.message.bloomfilter.BloomFilter
import java.util.*

class BloomFilterTest {
    @Test
    fun insertSerializeTest() {
        val filter = BloomFilter(3, 0.01, 0, BloomFilter.BloomUpdate.UPDATE_ALL)

        filter.insert(Utils.HEX.decode("99108ad8ed9bb6274d3980bab5a85c048f0950c8"))
        Assert.assertTrue(filter.contains(Utils.HEX.decode("99108ad8ed9bb6274d3980bab5a85c048f0950c8")))
        // One bit different in first byte
        Assert.assertFalse(filter.contains(Utils.HEX.decode("19108ad8ed9bb6274d3980bab5a85c048f0950c8")))

        filter.insert(Utils.HEX.decode("b5a2c786d9ef4658287ced5914b37a1b4aa32eee"))
        Assert.assertTrue(filter.contains(Utils.HEX.decode("b5a2c786d9ef4658287ced5914b37a1b4aa32eee")))

        filter.insert(Utils.HEX.decode("b9300670b4c5366e95b2699e8b18bc75e5f729c5"))
        Assert.assertTrue(filter.contains(Utils.HEX.decode("b9300670b4c5366e95b2699e8b18bc75e5f729c5")))

        // Value generated by Bitcoin Core
        Assert.assertTrue(
            Arrays.equals(
                Utils.HEX.decode("03614e9b050000000000000001"),
                filter.serialize()
            )
        )
    }

    @Test
    fun insertSerializeTestWithTweak() {
        val filter = BloomFilter(3, 0.01, 2147483649L)
        filter.insert(Utils.HEX.decode("99108ad8ed9bb6274d3980bab5a85c048f0950c8"))
        Assert.assertTrue(filter.contains(Utils.HEX.decode("99108ad8ed9bb6274d3980bab5a85c048f0950c8")))
        // One bit different in first byte
        Assert.assertFalse(filter.contains(Utils.HEX.decode("19108ad8ed9bb6274d3980bab5a85c048f0950c8")))
        filter.insert(Utils.HEX.decode("b5a2c786d9ef4658287ced5914b37a1b4aa32eee"))
        Assert.assertTrue(filter.contains(Utils.HEX.decode("b5a2c786d9ef4658287ced5914b37a1b4aa32eee")))
        filter.insert(Utils.HEX.decode("b9300670b4c5366e95b2699e8b18bc75e5f729c5"))
        Assert.assertTrue(filter.contains(Utils.HEX.decode("b9300670b4c5366e95b2699e8b18bc75e5f729c5")))

        // Value generated by Bitcoin Core
        Assert.assertTrue(
            Arrays.equals(
                Utils.HEX.decode("03ce4299050000000100008002"),
                filter.serialize()
            )
        )
    }

}